# identify if there is one or more pairs in the hand
from typing import Dict, List, Any, Union
import matplotlib.pyplot as plt
Ranks = ['2', '3', '4', '5', '6', '7', '8', '9', 'T', 'J', 'Q', 'K', 'A']

Suits = ['s', 'h', 'd', 'c']
        # SPADE  HEART DIAMOND CLUB

COMBOS = ['High Card', 'Pair', '2 Pairs',  '3 of a kind',
          'Straight', 'Flush', 'Full House', '4 of a kind', 'Straight Flush' ]



# identify hand category using IF-THEN rule
def identifyPair(Hand_):
    for c1 in Hand_:
        for c2 in Hand_:
            if (c1[0] == c2[0]) and (c1[1] < c2[1]):
                yield dict(name='Pair',rank=c1[0],suit1=c1[1],suit2=c2[1])

# SORT HAND BY RANK
def hand_sort(Hand) :

    h = sorted(Hand, key=card_strength)  # sort by card_value

    #r = h[::-1]   # in decreasing order
    return h



def identifyHand(Hand):
    #print('identify Hand')
    if len(Hand) == 5:

        flush = False
        fourple = False
        straight = False
        triple = False
        pairs = 0

        pairs_set = set()

        triple_set = set()

        full_set = set()
        full_set.update(Hand)

        #sort in increasing strength
        Hand = hand_sort(Hand)


        x1 = Hand[0]
        x2 = Hand[1]
        x3 = Hand[2]
        x4 = Hand[3]
        x5 = Hand[4]

        # straight
        if Ranks.index(x1[0]) == Ranks.index(x2[0])- 1 and Ranks.index(x2[0]) == Ranks.index(x3[0]) - 1 and Ranks.index(x3[0]) == Ranks.index(x4[0]) - 1 and Ranks.index(x4[0]) == Ranks.index(x5[0]) - 1:
            straight = True


        # straight with ACE at bottom
        if x1[0] == '2' and x2[0] == '3' and x3[0] == '4' and x4[0] == '5' and x5[0] == 'A':
            straight = True


        # flush
        if Suits.index(x1[1]) == Suits.index(x2[1]) and Suits.index(x2[1]) == Suits.index(x3[1]) and Suits.index(x3[1]) == Suits.index(x4[1]) and Suits.index(x4[1]) == Suits.index(x5[1]):
            flush = True


        for c1 in Hand :
            for c2 in Hand :
                if c1!=c2 :
                    for c3 in Hand :
                        if c3!=c1 and  c3!=c2 :
                            for c4 in Hand:
                                if c4!=c1 and c4!=c2 and c4!=c3:
                                    for c5 in Hand :
                                        if c5!=c1 and c5!=c2 and c5!=c3 and c5!=c4:

                                            # check for 4 of a kind
                                            if Ranks.index(c1[0])==Ranks.index(c2[0]) and Ranks.index(c2[0])==Ranks.index(c3[0]) and Ranks.index(c3[0])==Ranks.index(c4[0]):
                                                fourple = True

                                            # check for 3 of a kind
                                            elif Ranks.index(c1[0])==Ranks.index(c2[0]) and Ranks.index(c2[0])==Ranks.index(c3[0]):
                                                if c1 not in triple_set:

                                                    triple_set.add(c1)
                                                    triple_set.add(c2)
                                                    triple_set.add(c3)
                                                    triple = True


                                            # check pairs
                                            elif Ranks.index(c1[0])==Ranks.index(c2[0]) :
                                                if c1 not in  pairs_set and c1 not in triple_set and not fourple:
                                                    p = c1, c2
                                                    pairs_set.add(c1)
                                                    pairs_set.add(c2)
                                                    pairs+=1


        for c in triple_set :
            if c in pairs_set:
                pairs_set.remove(c)

        if straight and flush:
            yield dict(name='Straight Flush', rank=c1[0], set= full_set)
        elif straight:
            yield dict(name='Straight', rank=c1[0], set = full_set)
        elif flush:
            yield dict(name='Flush', rank=c1[0], set = full_set)
        elif fourple:
            yield dict(name='4 of a kind', rank=c1[0], set = pairs_set)
        elif len(triple_set) and len(pairs_set) > 0:
            yield dict(name='Full House', rank=c1[0] , set = full_set)
        elif len(triple_set):
            yield dict(name='3 of a kind', rank=c1[0] , set = triple_set)
        elif len(pairs_set) > 0 and pairs >1:
            yield dict(name='2 Pairs', rank=c1[0], set = pairs_set)
        elif len(pairs_set) > 0:
            yield dict(name='Pair', rank=c1[0], set = pairs_set)



# Print out the result
def analyseHand(Hand):

    HandCategory=list()
    functionToUse = identifyHand
    for category in functionToUse(Hand):
        HandCategory.append(category)

    return HandCategory

def card_strength(c) :

    return Ranks.index(c[0])  # rank matters but suits don't



# compute the value of a hand
# so that we can predict the winning hand just by comparing their values
def hand_strength(hand):

    hand = hand_sort(hand)
    # Check for any pair or triple
    anal = analyseHand(hand)
    value = 0
    max_card_value = card_strength('Ac') + 1

    # highest hand without pair, 3 of a kind ....
    max_high_card_strength = card_strength('Tc') + card_strength('Jd') * max_card_value + card_strength('Qs') * max_card_value**2+ card_strength('Kd') * max_card_value**3 + card_strength('As') * max_card_value**4

    pair_value = max_high_card_strength + 1        #  max_card_value ^ len(hand)
    double_pair_value = pair_value + max_high_card_strength # pow(max_card_value, len(hand))

    triplet_value = double_pair_value + max_high_card_strength # pow(max_card_value, len(hand))

    straight_value = triplet_value + max_high_card_strength # pow(max_card_value, len(hand))

    flush_value = straight_value + max_high_card_strength # pow(max_card_value, len(hand))

    full_house_value = flush_value + max_high_card_strength # pow(max_card_value, len(hand))

    quadruple_value = full_house_value + max_high_card_strength # pow(max_card_value, len(hand))

    straight_flush_value = quadruple_value + max_high_card_strength # pow(max_card_value, len(hand))

    # straight with ACE at bottom
    if hand[0][0] == '2' and hand[1][0] == '3' and hand[2][0] == '4' and hand[3][0] == '5' and hand[4][0] == 'A':
        value = -1 + card_strength('2d') * max_card_value + card_strength('3s') * max_card_value**2+ card_strength('4d') * max_card_value**3 + card_strength('5s') * max_card_value**4

    else:

        for i in reversed(range(len(hand))):
            c = hand[i]
            value += card_strength(c) * pow(max_card_value, i)  # strongest cards matter more than second
    if len(anal) > 0:
        for combo in anal:
            if combo["name"] == COMBOS[1]:
                value += pair_value
            elif combo["name"] == COMBOS[2]:
                value += double_pair_value
            elif combo["name"] == COMBOS[3]:
                value += triplet_value
            elif combo["name"] == COMBOS[4]:
                value += straight_value
            elif combo["name"] == COMBOS[5]:
                value += flush_value
            elif combo["name"] == COMBOS[6]:
                value += full_house_value
            elif combo["name"] == COMBOS[7]:
                value += quadruple_value
            elif combo["name"] == COMBOS[8]:
                value += straight_flush_value
    return value

strength = list()
cdf = list()
def strength_order(sample):
    return strength[cdf.index(sample)]


hand = ['4d', '3c', '2s', 'Js', 'Kd']
cat = identifyHand(hand)
print(cat)
print(hand)
dist = {368333: 0.0007102272727272727, 554151: 0.0007102272727272727, 368642: 0.0007102272727272727, 337039: 0.0014204545454545455, 368264: 0.0014204545454545455, 1094824: 0.0014204545454545455, 1042392: 0.0007102272727272727, 304437: 0.0007102272727272727, 306829: 0.002130681818181818, 730497: 0.0007102272727272727, 704471: 0.0007102272727272727, 704133: 0.0014204545454545455, 675753: 0.0007102272727272727, 337743: 0.0007102272727272727, 368712: 0.0014204545454545455, 330253: 0.0007102272727272727, 306803: 0.0007102272727272727, 673012: 0.0007102272727272727, 582935: 0.0007102272727272727, 680294: 0.0007102272727272727, 737793: 0.0007102272727272727, 368347: 0.0007102272727272727, 368685: 0.002130681818181818, 334802: 0.0014204545454545455, 363938: 0.0007102272727272727, 263991: 0.0007102272727272727, 730446: 0.0007102272727272727, 337689: 0.0014204545454545455, 334647: 0.002130681818181818, 1111414: 0.0007102272727272727, 616252: 0.0007102272727272727, 1358844: 0.0014204545454545455, 337025: 0.0007102272727272727, 332996: 0.0007102272727272727, 330448: 0.002130681818181818, 618410: 0.0007102272727272727, 742132: 0.0014204545454545455, 1113386: 0.0014204545454545455, 1073347: 0.0007102272727272727, 649142: 0.0007102272727272727, 649480: 0.0007102272727272727, 708701: 0.0007102272727272727, 958803: 0.0007102272727272727, 954357: 0.0014204545454545455, 304408: 0.0014204545454545455, 697321: 0.0007102272727272727, 244584: 0.0007102272727272727, 368501: 0.0007102272727272727, 334998: 0.0014204545454545455, 365783: 0.0007102272727272727, 642591: 0.0014204545454545455, 327704: 0.0014204545454545455, 690209: 0.0014204545454545455, 361024: 0.0007102272727272727, 711064: 0.0007102272727272727, 332801: 0.0014204545454545455, 668773: 0.0007102272727272727, 1853886: 0.002130681818181818, 1113555: 0.0007102272727272727, 354419: 0.0014204545454545455, 268736: 0.0007102272727272727, 703587: 0.002130681818181818, 366151: 0.0014204545454545455, 182871: 0.0007102272727272727, 335024: 0.0007102272727272727, 337379: 0.002840909090909091, 337210: 0.0014204545454545455, 679744: 0.0007102272727272727, 304255: 0.0007102272727272727, 363573: 0.002130681818181818, 675025: 0.0007102272727272727, 679942: 0.0007102272727272727, 302058: 0.0007102272727272727, 363740: 0.0007102272727272727, 673533: 0.0007102272727272727, 1416145: 0.0007102272727272727, 679770: 0.0007102272727272727, 737737: 0.0014204545454545455, 611638: 0.0007102272727272727, 242555: 0.0007102272727272727, 244947: 0.002130681818181818, 361206: 0.0007102272727272727, 609284: 0.0007102272727272727, 361023: 0.0007102272727272727, 1078079: 0.0007102272727272727, 706279: 0.0014204545454545455, 697167: 0.0007102272727272727, 711418: 0.0007102272727272727, 711414: 0.0007102272727272727, 368710: 0.0014204545454545455, 242203: 0.0007102272727272727, 303719: 0.0014204545454545455, 741105: 0.0007102272727272727, 335363: 0.0007102272727272727, 332619: 0.0014204545454545455, 325676: 0.0007102272727272727, 737453: 0.0014204545454545455, 368344: 0.0007102272727272727, 361518: 0.0014204545454545455, 335393: 0.002130681818181818, 365235: 0.0007102272727272727, 668435: 0.0007102272727272727, 335192: 0.002130681818181818, 306464: 0.0007102272727272727, 306254: 0.0014204545454545455, 363039: 0.0007102272727272727, 306436: 0.0014204545454545455, 680475: 0.0014204545454545455, 618580: 0.0007102272727272727, 677352: 0.0007102272727272727, 644397: 0.0014204545454545455, 275341: 0.0014204545454545455, 361348: 0.0007102272727272727, 363572: 0.0007102272727272727, 368502: 0.0014204545454545455, 710700: 0.0014204545454545455, 337392: 0.0007102272727272727, 337363: 0.0007102272727272727, 615342: 0.0014204545454545455, 615329: 0.0014204545454545455, 741979: 0.0007102272727272727, 273130: 0.0014204545454545455, 732515: 0.002130681818181818, 611666: 0.0007102272727272727, 1482783: 0.0007102272727272727, 728066: 0.0007102272727272727, 739051: 0.0014204545454545455, 692589: 0.0007102272727272727, 367433: 0.002130681818181818, 366317: 0.0014204545454545455, 670815: 0.0014204545454545455, 337731: 0.0007102272727272727, 332098: 0.0014204545454545455, 670254: 0.0007102272727272727, 299481: 0.002130681818181818, 1475643: 0.0007102272727272727, 578345: 0.0007102272727272727, 580556: 0.0014204545454545455, 709234: 0.0007102272727272727, 989664: 0.0007102272727272727, 358997: 0.0007102272727272727, 358828: 0.0007102272727272727, 335376: 0.0014204545454545455, 335323: 0.002130681818181818, 365939: 0.0007102272727272727, 330632: 0.0007102272727272727, 273510: 0.0014204545454545455, 679576: 0.0007102272727272727, 741837: 0.002130681818181818, 306100: 0.0014204545454545455, 336858: 0.0014204545454545455, 611664: 0.0007102272727272727, 242528: 0.0007102272727272727, 240162: 0.0014204545454545455, 368709: 0.004261363636363636, 741820: 0.0007102272727272727, 361349: 0.002130681818181818, 365950: 0.0014204545454545455, 306633: 0.0007102272727272727, 701390: 0.0007102272727272727, 1073361: 0.0014204545454545455, 553813: 0.0014204545454545455, 273494: 0.0007102272727272727, 585078: 0.0014204545454545455, 737417: 0.0014204545454545455, 275510: 0.0014204545454545455, 273313: 0.0007102272727272727, 723320: 0.0007102272727272727, 551954: 0.0014204545454545455, 666406: 0.0007102272727272727, 554375: 0.0007102272727272727, 1699181: 0.0014204545454545455, 337573: 0.0007102272727272727, 1020098: 0.0007102272727272727, 648804: 0.0014204545454545455, 328252: 0.0007102272727272727, 301704: 0.0007102272727272727, 273143: 0.0007102272727272727, 213995: 0.0007102272727272727, 585289: 0.002840909090909091, 268568: 0.0007102272727272727, 306579: 0.0007102272727272727, 1385207: 0.0007102272727272727, 642606: 0.0014204545454545455, 361375: 0.0007102272727272727, 673534: 0.0007102272727272727, 275522: 0.0007102272727272727, 711231: 0.0007102272727272727, 680488: 0.0007102272727272727, 680319: 0.002130681818181818, 356616: 0.0007102272727272727, 735402: 0.0007102272727272727, 306255: 0.0014204545454545455, 368516: 0.0007102272727272727, 368529: 0.0007102272727272727, 368319: 0.0007102272727272727, 668606: 0.0007102272727272727, 897094: 0.0007102272727272727, 363948: 0.0007102272727272727, 335387: 0.0007102272727272727, 335364: 0.0007102272727272727, 2506213: 0.0007102272727272727, 1392330: 0.0007102272727272727, 337753: 0.0007102272727272727, 337759: 0.002130681818181818, 644930: 0.0007102272727272727, 958230: 0.0007102272727272727, 368708: 0.0007102272727272727, 273508: 0.0007102272727272727, 671112: 0.0007102272727272727, 648466: 0.0007102272727272727, 678223: 0.0014204545454545455, 647367: 0.0007102272727272727, 366120: 0.0007102272727272727, 363769: 0.0014204545454545455, 1389966: 0.0007102272727272727, 1389965: 0.0014204545454545455, 367601: 0.0007102272727272727, 711076: 0.0007102272727272727, 740162: 0.0014204545454545455, 735371: 0.0007102272727272727, 332827: 0.0007102272727272727, 328069: 0.0014204545454545455, 694968: 0.0014204545454545455, 647192: 0.0007102272727272727, 732877: 0.0007102272727272727, 366147: 0.0007102272727272727, 305734: 0.0014204545454545455, 306085: 0.0014204545454545455, 742383: 0.0007102272727272727, 306280: 0.0007102272727272727, 359192: 0.0007102272727272727, 730488: 0.0007102272727272727, 366137: 0.0014204545454545455, 361387: 0.0014204545454545455, 523238: 0.0007102272727272727, 152126: 0.0007102272727272727, 323492: 0.0007102272727272727, 492661: 0.0014204545454545455, 365967: 0.0007102272727272727, 365940: 0.002130681818181818, 1112527: 0.0007102272727272727, 741247: 0.0007102272727272727, 525772: 0.0007102272727272727, 525434: 0.0007102272727272727, 679928: 0.0007102272727272727, 679590: 0.0007102272727272727, 648987: 0.0007102272727272727, 334816: 0.0007102272727272727, 356798: 0.0007102272727272727, 704314: 0.0007102272727272727, 706687: 0.0007102272727272727, 359166: 0.0007102272727272727, 356800: 0.0014204545454545455, 240189: 0.0014204545454545455, 359152: 0.0007102272727272727, 368162: 0.0014204545454545455, 304423: 0.0007102272727272727, 725348: 0.0007102272727272727, 354068: 0.0014204545454545455, 618593: 0.0007102272727272727, 733045: 0.0007102272727272727, 368303: 0.0014204545454545455, 242541: 0.002130681818181818, 614042: 0.0014204545454545455, 301873: 0.0014204545454545455, 680264: 0.0007102272727272727, 302029: 0.0007102272727272727, 705419: 0.0007102272727272727, 706265: 0.0007102272727272727, 366301: 0.0007102272727272727, 306649: 0.0007102272727272727, 680139: 0.0014204545454545455, 644931: 0.0007102272727272727, 335365: 0.0007102272727272727, 368707: 0.0014204545454545455, 742387: 0.0007102272727272727, 304241: 0.0007102272727272727, 299325: 0.0007102272727272727, 1730122: 0.002840909090909091, 363953: 0.0014204545454545455, 360842: 0.0007102272727272727, 358645: 0.0007102272727272727, 368515: 0.0014204545454545455, 368489: 0.002130681818181818, 708786: 0.0007102272727272727, 711080: 0.0007102272727272727, 306635: 0.0007102272727272727, 304438: 0.002840909090909091, 668070: 0.0007102272727272727, 647351: 0.0007102272727272727, 647310: 0.0014204545454545455, 668616: 0.0007102272727272727, 367799: 0.0014204545454545455, 337571: 0.0007102272727272727, 368667: 0.0007102272727272727, 556712: 0.0014204545454545455, 701744: 0.0007102272727272727, 330449: 0.002130681818181818, 213642: 0.0007102272727272727, 668772: 0.0007102272727272727, 525616: 0.0014204545454545455, 366132: 0.0014204545454545455, 642253: 0.0007102272727272727, 275692: 0.0007102272727272727, 732880: 0.0007102272727272727, 365222: 0.0007102272727272727, 736516: 0.0007102272727272727, 363924: 0.0014204545454545455, 549783: 0.0007102272727272727, 178308: 0.0007102272727272727, 649324: 0.0007102272727272727, 648986: 0.0014204545454545455, 708842: 0.0007102272727272727, 361558: 0.0007102272727272727, 299326: 0.0007102272727272727, 587681: 0.0007102272727272727, 1330449: 0.0007102272727272727, 361556: 0.0007102272727272727, 275873: 0.0014204545454545455, 273300: 0.0007102272727272727, 367939: 0.0007102272727272727, 368160: 0.0014204545454545455, 306788: 0.0007102272727272727, 304422: 0.0007102272727272727, 675676: 0.0014204545454545455, 335023: 0.0007102272727272727, 728290: 0.0007102272727272727, 556740: 0.0007102272727272727, 1328080: 0.0007102272727272727, 1299493: 0.0007102272727272727, 244934: 0.0007102272727272727, 730418: 0.0007102272727272727, 335351: 0.0014204545454545455, 711165: 0.0007102272727272727, 334633: 0.0014204545454545455, 680320: 0.0007102272727272727, 306814: 0.002130681818181818, 363936: 0.0007102272727272727, 670814: 0.0007102272727272727, 337547: 0.0014204545454545455, 706448: 0.0014204545454545455, 958568: 0.0007102272727272727, 958737: 0.0007102272727272727, 303889: 0.0007102272727272727, 304227: 0.0014204545454545455, 709235: 0.0007102272727272727, 727742: 0.0007102272727272727, 613498: 0.0007102272727272727, 361377: 0.0007102272727272727, 242570: 0.002840909090909091, 647325: 0.0007102272727272727, 306449: 0.0007102272727272727, 711403: 0.0007102272727272727, 1081994: 0.0007102272727272727, 642551: 0.002130681818181818, 642565: 0.0014204545454545455, 618074: 0.0007102272727272727, 678135: 0.0007102272727272727, 306776: 0.002840909090909091, 365937: 0.0007102272727272727, 365926: 0.002840909090909091, 337390: 0.0007102272727272727, 367940: 0.0007102272727272727, 327887: 0.002130681818181818, 368530: 0.0014204545454545455, 368699: 0.0014204545454545455, 244936: 0.0007102272727272727, 556726: 0.0007102272727272727, 1113693: 0.0007102272727272727, 1113685: 0.0007102272727272727, 742315: 0.002840909090909091, 366305: 0.0007102272727272727, 704483: 0.0007102272727272727, 332982: 0.0014204545454545455, 728288: 0.0007102272727272727, 301523: 0.0007102272727272727, 211446: 0.0014204545454545455, 335195: 0.0007102272727272727, 337562: 0.0007102272727272727, 332645: 0.0014204545454545455, 306647: 0.0007102272727272727, 304268: 0.0007102272727272727, 363754: 0.0007102272727272727, 358983: 0.0007102272727272727, 304086: 0.0007102272727272727, 611497: 0.0014204545454545455, 711399: 0.0007102272727272727, 729951: 0.002130681818181818, 737802: 0.0007102272727272727, 737804: 0.0014204545454545455, 678139: 0.0007102272727272727, 1473264: 0.0007102272727272727, 739586: 0.0007102272727272727, 741950: 0.0007102272727272727, 709203: 0.0007102272727272727, 1080501: 0.0014204545454545455, 735256: 0.002130681818181818, 363377: 0.002130681818181818, 361180: 0.0014204545454545455, 1082726: 0.0007102272727272727, 708110: 0.0007102272727272727, 1050842: 0.0014204545454545455, 335206: 0.0007102272727272727, 674817: 0.0007102272727272727, 1346761: 0.0007102272727272727, 1468507: 0.0007102272727272727, 1112593: 0.0014204545454545455, 368531: 0.0014204545454545455, 706589: 0.0014204545454545455, 709228: 0.0007102272727272727, 737789: 0.0014204545454545455, 332998: 0.0007102272727272727, 1478022: 0.0007102272727272727, 618411: 0.0007102272727272727, 618426: 0.0014204545454545455, 337182: 0.0007102272727272727, 356265: 0.0007102272727272727, 644635: 0.0007102272727272727, 703404: 0.0007102272727272727, 668746: 0.0007102272727272727, 708344: 0.0007102272727272727, 275694: 0.0014204545454545455, 368696: 0.0014204545454545455, 366330: 0.0014204545454545455, 328251: 0.0007102272727272727, 492492: 0.0007102272727272727, 523421: 0.0014204545454545455, 368697: 0.0007102272727272727, 728052: 0.0007102272727272727, 737633: 0.0007102272727272727, 366275: 0.0007102272727272727, 366278: 0.0007102272727272727, 361545: 0.0007102272727272727, 363951: 0.0007102272727272727, 337561: 0.002130681818181818, 304072: 0.0014204545454545455, 367797: 0.0014204545454545455, 367588: 0.0007102272727272727, 367757: 0.0014204545454545455, 244949: 0.0007102272727272727, 696995: 0.0007102272727272727, 703586: 0.0007102272727272727, 367954: 0.0007102272727272727, 365757: 0.002130681818181818, 337728: 0.0007102272727272727, 678237: 0.0007102272727272727, 648649: 0.0014204545454545455, 359151: 0.002130681818181818, 271116: 0.0007102272727272727, 736543: 0.0007102272727272727, 701939: 0.0007102272727272727, 677222: 0.0007102272727272727, 365966: 0.0007102272727272727, 1355549: 0.0007102272727272727, 616174: 0.0007102272727272727, 368485: 0.0007102272727272727, 337768: 0.0014204545454545455, 368655: 0.0014204545454545455, 306593: 0.0007102272727272727, 306592: 0.002840909090909091, 304451: 0.0014204545454545455, 354406: 0.0007102272727272727, 363363: 0.0014204545454545455, 366318: 0.0014204545454545455, 368684: 0.0007102272727272727, 1106612: 0.0007102272727272727, 2506101: 0.0014204545454545455, 335374: 0.0007102272727272727, 335010: 0.0007102272727272727, 368472: 0.0014204545454545455, 304450: 0.0007102272727272727, 648635: 0.0007102272727272727, 649338: 0.0007102272727272727, 329901: 0.0007102272727272727, 330590: 0.0007102272727272727, 739783: 0.0007102272727272727, 706149: 0.0014204545454545455, 242569: 0.0007102272727272727, 731939: 0.0007102272727272727, 615498: 0.0007102272727272727, 337209: 0.0014204545454545455, 365953: 0.0007102272727272727, 865787: 0.0007102272727272727, 492297: 0.0007102272727272727, 702107: 0.0007102272727272727, 333011: 0.0014204545454545455, 368711: 0.0007102272727272727, 490113: 0.0014204545454545455, 640185: 0.0007102272727272727, 642434: 0.0014204545454545455, 734854: 0.0007102272727272727, 738361: 0.0007102272727272727, 703209: 0.0014204545454545455, 301889: 0.0007102272727272727, 742316: 0.0014204545454545455, 336675: 0.0007102272727272727, 367966: 0.0007102272727272727, 738921: 0.0007102272727272727, 330617: 0.0014204545454545455, 368161: 0.002840909090909091, 675507: 0.0014204545454545455, 332646: 0.0014204545454545455, 737088: 0.002130681818181818, 306269: 0.0007102272727272727, 268751: 0.0007102272727272727, 335309: 0.0007102272727272727, 706862: 0.0014204545454545455, 306818: 0.0007102272727272727, 673013: 0.0007102272727272727, 956737: 0.0007102272727272727, 670995: 0.0007102272727272727, 302068: 0.0014204545454545455, 616256: 0.0014204545454545455, 680420: 0.0014204545454545455, 306410: 0.0007102272727272727, 494858: 0.0007102272727272727, 865956: 0.0007102272727272727, 587668: 0.0007102272727272727, 673546: 0.0007102272727272727, 363741: 0.0007102272727272727, 711373: 0.0007102272727272727, 1081600: 0.0014204545454545455, 366122: 0.0007102272727272727, 275877: 0.0007102272727272727, 647010: 0.0014204545454545455, 680291: 0.0014204545454545455, 680499: 0.0007102272727272727, 614031: 0.0014204545454545455, 365419: 0.0007102272727272727, 680252: 0.0007102272727272727, 356814: 0.0007102272727272727, 328253: 0.0014204545454545455, 273312: 0.0014204545454545455, 299494: 0.0014204545454545455, 337716: 0.0007102272727272727, 737586: 0.0007102272727272727, 677915: 0.0007102272727272727, 675718: 0.0007102272727272727, 337769: 0.0007102272727272727, 739468: 0.0007102272727272727, 368123: 0.0014204545454545455, 361574: 0.0014204545454545455, 333012: 0.0014204545454545455, 732136: 0.0014204545454545455, 666394: 0.0007102272727272727, 299495: 0.0014204545454545455, 708529: 0.0007102272727272727, 299689: 0.0007102272727272727, 356811: 0.0007102272727272727, 306450: 0.0007102272727272727, 327886: 0.0014204545454545455, 336674: 0.0007102272727272727, 354251: 0.0007102272727272727, 613874: 0.0007102272727272727, 273144: 0.0007102272727272727, 367771: 0.0014204545454545455, 368524: 0.0007102272727272727, 366329: 0.0014204545454545455, 366315: 0.0007102272727272727, 335196: 0.002130681818181818, 270765: 0.0007102272727272727, 306462: 0.0007102272727272727, 680477: 0.0007102272727272727, 273299: 0.0014204545454545455, 273314: 0.0014204545454545455, 705927: 0.0007102272727272727, 708124: 0.0014204545454545455, 366109: 0.0007102272727272727, 739572: 0.0007102272727272727, 363714: 0.0007102272727272727, 735410: 0.0014204545454545455, 368317: 0.0007102272727272727, 733007: 0.0007102272727272727, 363701: 0.0007102272727272727, 366333: 0.002130681818181818, 356812: 0.0007102272727272727, 306099: 0.0007102272727272727, 306072: 0.0014204545454545455, 337588: 0.0007102272727272727, 368342: 0.0007102272727272727, 642436: 0.0007102272727272727, 271117: 0.0014204545454545455, 732319: 0.0007102272727272727, 989744: 0.0007102272727272727, 704134: 0.0014204545454545455, 363949: 0.0007102272727272727, 1044758: 0.0007102272727272727, 958061: 0.0014204545454545455, 337755: 0.0014204545454545455, 1447084: 0.0007102272727272727, 1485056: 0.0007102272727272727, 741078: 0.0007102272727272727, 739037: 0.0007102272727272727, 358995: 0.002130681818181818, 363940: 0.0007102272727272727, 677769: 0.0007102272727272727, 240176: 0.0007102272727272727, 1392331: 0.0007102272727272727, 1020869: 0.0014204545454545455, 368668: 0.0007102272727272727, 301888: 0.0007102272727272727, 214008: 0.0007102272727272727, 742300: 0.0007102272727272727, 1485055: 0.0014204545454545455, 275525: 0.0007102272727272727, 740148: 0.0014204545454545455, 678291: 0.0007102272727272727, 709233: 0.0007102272727272727, 680503: 0.0014204545454545455, 361560: 0.0007102272727272727, 711390: 0.0007102272727272727, 708476: 0.0007102272727272727, 337222: 0.0014204545454545455, 213993: 0.0014204545454545455, 336830: 0.0007102272727272727, 737778: 0.0007102272727272727, 740092: 0.0007102272727272727, 710699: 0.0007102272727272727, 368320: 0.0007102272727272727, 644411: 0.0007102272727272727, 642214: 0.0014204545454545455, 551812: 0.0007102272727272727, 337196: 0.0014204545454545455, 1075755: 0.0007102272727272727, 334984: 0.0007102272727272727, 556530: 0.0007102272727272727, 270920: 0.0007102272727272727, 304424: 0.002130681818181818, 739924: 0.0007102272727272727, 1466130: 0.0007102272727272727, 704488: 0.0007102272727272727, 704459: 0.0014204545454545455, 365968: 0.002130681818181818, 332647: 0.0007102272727272727, 703954: 0.0014204545454545455, 363935: 0.0007102272727272727, 737572: 0.0007102272727272727, 736723: 0.0007102272727272727, 359191: 0.0007102272727272727, 735178: 0.0007102272727272727, 363757: 0.0007102272727272727, 367616: 0.0014204545454545455, 694969: 0.0007102272727272727, 897104: 0.0007102272727272727, 640055: 0.0014204545454545455, 213994: 0.0007102272727272727, 678028: 0.0007102272727272727, 1051518: 0.0014204545454545455, 337771: 0.0007102272727272727, 368136: 0.002130681818181818, 368672: 0.0007102272727272727, 332802: 0.002130681818181818, 180687: 0.0007102272727272727, 356629: 0.0014204545454545455, 366328: 0.0007102272727272727, 644970: 0.0007102272727272727, 703575: 0.0007102272727272727, 306437: 0.0007102272727272727, 368460: 0.002130681818181818, 306815: 0.0007102272727272727, 1019956: 0.0007102272727272727, 648832: 0.0014204545454545455, 306748: 0.0007102272727272727, 701730: 0.0007102272727272727, 368150: 0.0014204545454545455, 242372: 0.0007102272727272727, 334829: 0.0007102272727272727, 706798: 0.0014204545454545455, 366319: 0.0007102272727272727, 701391: 0.0007102272727272727, 337365: 0.0014204545454545455, 304084: 0.0014204545454545455, 359190: 0.0007102272727272727, 363753: 0.0014204545454545455, 337364: 0.0007102272727272727, 332995: 0.0007102272727272727, 332956: 0.0007102272727272727, 365771: 0.0007102272727272727, 670816: 0.0007102272727272727, 647350: 0.0007102272727272727, 615850: 0.0007102272727272727, 332449: 0.0007102272727272727, 703768: 0.0014204545454545455, 306619: 0.0014204545454545455, 701533: 0.0007102272727272727, 701702: 0.0014204545454545455, 363896: 0.0007102272727272727, 304266: 0.0007102272727272727, 680290: 0.0007102272727272727, 304083: 0.0007102272727272727, 244556: 0.0007102272727272727, 2215265: 0.0014204545454545455, 302016: 0.002130681818181818, 737272: 0.0007102272727272727, 706840: 0.002130681818181818, 730460: 0.0007102272727272727, 235430: 0.0007102272727272727, 1834846: 0.0007102272727272727, 301875: 0.0007102272727272727, 306607: 0.0014204545454545455, 739896: 0.0007102272727272727, 703951: 0.0007102272727272727, 704293: 0.0014204545454545455, 242021: 0.0007102272727272727, 673296: 0.0007102272727272727, 737628: 0.0007102272727272727, 268567: 0.0007102272727272727, 730291: 0.0007102272727272727, 582753: 0.0014204545454545455, 711232: 0.0007102272727272727, 585261: 0.0007102272727272727, 334661: 0.0007102272727272727, 670972: 0.0007102272727272727, 732994: 0.0007102272727272727, 556713: 0.0007102272727272727, 328225: 0.0007102272727272727, 368498: 0.0007102272727272727, 739830: 0.0007102272727272727, 741456: 0.0007102272727272727, 727897: 0.0014204545454545455, 366121: 0.0007102272727272727, 728275: 0.0007102272727272727, 1470887: 0.0014204545454545455, 304436: 0.0007102272727272727, 741654: 0.0007102272727272727, 359177: 0.0007102272727272727, 644256: 0.0007102272727272727, 742119: 0.0007102272727272727, 741612: 0.0014204545454545455, 739600: 0.0007102272727272727, 306098: 0.0007102272727272727, 1330420: 0.0007102272727272727, 644956: 0.0014204545454545455, 368461: 0.0014204545454545455, 704068: 0.0014204545454545455, 706825: 0.0007102272727272727, 706785: 0.0014204545454545455, 707772: 0.0007102272727272727, 334464: 0.0007102272727272727, 739755: 0.0007102272727272727, 705785: 0.0014204545454545455, 273455: 0.0007102272727272727, 735206: 0.0007102272727272727, 363909: 0.0014204545454545455, 646466: 0.0007102272727272727, 299692: 0.0007102272727272727, 294918: 0.0007102272727272727, 1606358: 0.0014204545454545455, 711389: 0.0007102272727272727, 323479: 0.0007102272727272727, 367614: 0.0014204545454545455, 302070: 0.0007102272727272727, 367798: 0.0014204545454545455, 673545: 0.0007102272727272727, 368316: 0.0007102272727272727, 367980: 0.0007102272727272727, 580177: 0.0007102272727272727, 299691: 0.0007102272727272727, 297298: 0.0014204545454545455, 737711: 0.0007102272727272727, 699714: 0.0007102272727272727, 1299510: 0.0007102272727272727, 642607: 0.0007102272727272727, 365755: 0.0007102272727272727, 677183: 0.0007102272727272727, 737767: 0.0007102272727272727, 587654: 0.0007102272727272727, 647365: 0.0007102272727272727, 618595: 0.0014204545454545455, 1382824: 0.0007102272727272727, 1073333: 0.0007102272727272727, 547235: 0.0007102272727272727, 551799: 0.0014204545454545455, 739103: 0.0007102272727272727, 738374: 0.0007102272727272727, 736177: 0.0014204545454545455, 649558: 0.0007102272727272727, 270948: 0.0014204545454545455, 358969: 0.0007102272727272727, 361504: 0.0014204545454545455, 927863: 0.0007102272727272727, 732685: 0.0007102272727272727, 728121: 0.0007102272727272727, 729586: 0.0007102272727272727, 729768: 0.0007102272727272727, 740185: 0.0007102272727272727, 740016: 0.002130681818181818, 642369: 0.0007102272727272727, 1297144: 0.0007102272727272727, 1051349: 0.0007102272727272727, 708617: 0.0014204545454545455, 368447: 0.0014204545454545455, 337220: 0.0007102272727272727, 649195: 0.0007102272727272727, 271089: 0.0014204545454545455, 732840: 0.0007102272727272727, 330265: 0.0007102272727272727, 330450: 0.0007102272727272727, 644986: 0.0007102272727272727, 730669: 0.0014204545454545455, 367783: 0.0007102272727272727, 368686: 0.0007102272727272727, 666237: 0.0014204545454545455, 337688: 0.0007102272727272727, 709245: 0.0007102272727272727, 337717: 0.0007102272727272727, 674831: 0.0007102272727272727, 1032942: 0.0007102272727272727, 587471: 0.0007102272727272727, 697349: 0.0007102272727272727, 737791: 0.0007102272727272727, 358982: 0.0007102272727272727, 332969: 0.0007102272727272727, 368290: 0.0007102272727272727, 708687: 0.0007102272727272727, 337393: 0.0014204545454545455, 213460: 0.0007102272727272727, 335336: 0.0007102272727272727, 271129: 0.0007102272727272727, 578331: 0.0007102272727272727, 672828: 0.0014204545454545455, 585456: 0.0007102272727272727, 1482782: 0.0007102272727272727, 2567983: 0.0007102272727272727, 680125: 0.0007102272727272727, 680463: 0.0014204545454545455, 1473266: 0.0007102272727272727, 708814: 0.0007102272727272727, 301874: 0.0007102272727272727, 679758: 0.0007102272727272727, 304447: 0.0014204545454545455, 211615: 0.0007102272727272727, 639665: 0.0007102272727272727, 332943: 0.0007102272727272727, 358631: 0.0007102272727272727, 577993: 0.0014204545454545455, 365924: 0.0014204545454545455, 366119: 0.0007102272727272727, 368134: 0.0014204545454545455, 614045: 0.0007102272727272727, 368682: 0.0007102272727272727, 273507: 0.0007102272727272727, 337519: 0.0007102272727272727, 332618: 0.0014204545454545455, 741976: 0.0007102272727272727, 668057: 0.0007102272727272727, 676845: 0.0007102272727272727, 649197: 0.0007102272727272727, 271131: 0.0014204545454545455, 365965: 0.0007102272727272727, 730639: 0.0007102272727272727, 702078: 0.0007102272727272727, 2224976: 0.0007102272727272727, 711243: 0.0007102272727272727, 363767: 0.0014204545454545455, 611496: 0.0007102272727272727, 615890: 0.0014204545454545455, 677041: 0.0007102272727272727, 275834: 0.0007102272727272727, 1318565: 0.0007102272727272727, 1472356: 0.0007102272727272727, 275889: 0.0007102272727272727, 649561: 0.0007102272727272727, 707798: 0.0007102272727272727, 337181: 0.0007102272727272727, 335013: 0.0007102272727272727, 273497: 0.0014204545454545455, 741977: 0.0007102272727272727, 332829: 0.0007102272727272727, 302042: 0.0014204545454545455, 273481: 0.0014204545454545455, 301887: 0.0007102272727272727, 363743: 0.0007102272727272727, 363729: 0.0014204545454545455, 273496: 0.0007102272727272727, 273468: 0.0007102272727272727, 735415: 0.0007102272727272727, 649367: 0.0014204545454545455, 1082332: 0.0007102272727272727, 306828: 0.0007102272727272727, 365600: 0.002130681818181818, 736347: 0.0007102272727272727, 1432627: 0.0007102272727272727, 1318383: 0.0014204545454545455, 359165: 0.0007102272727272727, 737805: 0.0007102272727272727, 740131: 0.0007102272727272727, 740130: 0.0007102272727272727, 709079: 0.0007102272727272727, 337757: 0.0014204545454545455, 584767: 0.0007102272727272727, 368528: 0.0014204545454545455, 368680: 0.0007102272727272727, 328238: 0.0007102272727272727, 330604: 0.0014204545454545455, 978172: 0.0007102272727272727, 332985: 0.0007102272727272727, 703758: 0.0007102272727272727, 680473: 0.0007102272727272727, 679953: 0.0007102272727272727, 211629: 0.0007102272727272727, 209248: 0.0014204545454545455, 1112592: 0.0007102272727272727, 725910: 0.0007102272727272727, 1101964: 0.0007102272727272727, 711050: 0.0007102272727272727, 706771: 0.0014204545454545455, 704487: 0.0007102272727272727, 675926: 0.0014204545454545455, 725714: 0.0007102272727272727, 587640: 0.0007102272727272727, 330591: 0.0014204545454545455, 368698: 0.0007102272727272727, 613850: 0.0007102272727272727, 1356098: 0.0007102272727272727, 366332: 0.0007102272727272727, 306831: 0.0014204545454545455, 711248: 0.0007102272727272727, 337758: 0.0014204545454545455, 523589: 0.0007102272727272727, 677873: 0.0007102272727272727, 680486: 0.0007102272727272727, 1822945: 0.0007102272727272727, 325859: 0.002130681818181818, 328056: 0.0014204545454545455, 741937: 0.0014204545454545455, 209235: 0.0007102272727272727, 332605: 0.0007102272727272727, 332436: 0.0007102272727272727, 698828: 0.0007102272727272727, 698998: 0.0007102272727272727, 585313: 0.0007102272727272727, 337350: 0.0007102272727272727, 368304: 0.0007102272727272727, 304421: 0.0007102272727272727, 709179: 0.0007102272727272727, 325845: 0.0007102272727272727, 587497: 0.0007102272727272727, 337754: 0.0007102272727272727, 710346: 0.0007102272727272727, 710515: 0.0007102272727272727, 738739: 0.0014204545454545455, 585315: 0.0007102272727272727, 302056: 0.0007102272727272727, 670775: 0.0014204545454545455, 708884: 0.0007102272727272727, 649014: 0.0007102272727272727, 1392289: 0.0014204545454545455, 213981: 0.0007102272727272727, 363403: 0.0007102272727272727, 585455: 0.0007102272727272727, 614030: 0.0007102272727272727, 728274: 0.0007102272727272727, 556543: 0.0014204545454545455, 1081470: 0.0007102272727272727, 1480401: 0.0007102272727272727, 737776: 0.0014204545454545455, 707786: 0.0007102272727272727, 663846: 0.0014204545454545455, 268749: 0.0007102272727272727, 152113: 0.0014204545454545455, 330252: 0.0007102272727272727, 2320398: 0.0007102272727272727, 1320763: 0.0007102272727272727, 710840: 0.0007102272727272727, 306802: 0.0007102272727272727, 677549: 0.0014204545454545455, 359008: 0.0007102272727272727, 701012: 0.0007102272727272727, 368095: 0.0007102272727272727, 356785: 0.0007102272727272727, 268554: 0.0007102272727272727, 708293: 0.0014204545454545455, 337026: 0.0007102272727272727, 709190: 0.0007102272727272727, 741782: 0.0007102272727272727, 361532: 0.0007102272727272727, 706513: 0.0007102272727272727, 354434: 0.0007102272727272727, 741275: 0.0014204545454545455, 702108: 0.0007102272727272727, 739835: 0.0007102272727272727, 1449466: 0.0014204545454545455, 675014: 0.0007102272727272727, 737269: 0.0007102272727272727, 741288: 0.0007102272727272727, 1392291: 0.0007102272727272727, 649013: 0.0014204545454545455, 738738: 0.0007102272727272727, 1051624: 0.0007102272727272727, 675872: 0.0014204545454545455, 739466: 0.0007102272727272727, 958806: 0.0007102272727272727, 701757: 0.0014204545454545455, 618567: 0.0007102272727272727, 1082199: 0.0007102272727272727, 708163: 0.0007102272727272727, 705966: 0.0014204545454545455, 2162734: 0.0007102272727272727, 368330: 0.0007102272727272727, 330603: 0.0014204545454545455, 275706: 0.0007102272727272727, 708894: 0.0007102272727272727, 708895: 0.0014204545454545455, 1349324: 0.0007102272727272727, 583089: 0.0007102272727272727, 675755: 0.0007102272727272727, 242359: 0.0007102272727272727, 706511: 0.0007102272727272727, 335153: 0.0014204545454545455, 337224: 0.0007102272727272727, 735400: 0.0007102272727272727, 735374: 0.0014204545454545455, 608751: 0.0007102272727272727, 211445: 0.0007102272727272727, 330421: 0.0014204545454545455, 835198: 0.0007102272727272727, 692393: 0.0014204545454545455, 368513: 0.0007102272727272727}
n = 1048
freq = {368333: 1, 554151: 1, 368642: 1, 337039: 2, 368264: 2, 1094824: 2, 1042392: 1, 304437: 1, 306829: 3, 730497: 1, 704471: 1, 704133: 2, 675753: 1, 337743: 1, 368712: 2, 330253: 1, 306803: 1, 673012: 1, 582935: 1, 680294: 1, 737793: 1, 368347: 1, 368685: 3, 334802: 2, 363938: 1, 263991: 1, 730446: 1, 337689: 2, 334647: 3, 1111414: 1, 616252: 1, 1358844: 2, 337025: 1, 332996: 1, 330448: 3, 618410: 1, 742132: 2, 1113386: 2, 1073347: 1, 649142: 1, 649480: 1, 708701: 1, 958803: 1, 954357: 2, 304408: 2, 697321: 1, 244584: 1, 368501: 1, 334998: 2, 365783: 1, 642591: 2, 327704: 2, 690209: 2, 361024: 1, 711064: 1, 332801: 2, 668773: 1, 1853886: 3, 1113555: 1, 354419: 2, 268736: 1, 703587: 3, 366151: 2, 182871: 1, 335024: 1, 337379: 4, 337210: 2, 679744: 1, 304255: 1, 363573: 3, 675025: 1, 679942: 1, 302058: 1, 363740: 1, 673533: 1, 1416145: 1, 679770: 1, 737737: 2, 611638: 1, 242555: 1, 244947: 3, 361206: 1, 609284: 1, 361023: 1, 1078079: 1, 706279: 2, 697167: 1, 711418: 1, 711414: 1, 368710: 2, 242203: 1, 303719: 2, 741105: 1, 335363: 1, 332619: 2, 325676: 1, 737453: 2, 368344: 1, 361518: 2, 335393: 3, 365235: 1, 668435: 1, 335192: 3, 306464: 1, 306254: 2, 363039: 1, 306436: 2, 680475: 2, 618580: 1, 677352: 1, 644397: 2, 275341: 2, 361348: 1, 363572: 1, 368502: 2, 710700: 2, 337392: 1, 337363: 1, 615342: 2, 615329: 2, 741979: 1, 273130: 2, 732515: 3, 611666: 1, 1482783: 1, 728066: 1, 739051: 2, 692589: 1, 367433: 3, 366317: 2, 670815: 2, 337731: 1, 332098: 2, 670254: 1, 299481: 3, 1475643: 1, 578345: 1, 580556: 2, 709234: 1, 989664: 1, 358997: 1, 358828: 1, 335376: 2, 335323: 3, 365939: 1, 330632: 1, 273510: 2, 679576: 1, 741837: 3, 306100: 2, 336858: 2, 611664: 1, 242528: 1, 240162: 2, 368709: 6, 741820: 1, 361349: 3, 365950: 2, 306633: 1, 701390: 1, 1073361: 2, 553813: 2, 273494: 1, 585078: 2, 737417: 2, 275510: 2, 273313: 1, 723320: 1, 551954: 2, 666406: 1, 554375: 1, 1699181: 2, 337573: 1, 1020098: 1, 648804: 2, 328252: 1, 301704: 1, 273143: 1, 213995: 1, 585289: 4, 268568: 1, 306579: 1, 1385207: 1, 642606: 2, 361375: 1, 673534: 1, 275522: 1, 711231: 1, 680488: 1, 680319: 3, 356616: 1, 735402: 1, 306255: 2, 368516: 1, 368529: 1, 368319: 1, 668606: 1, 897094: 1, 363948: 1, 335387: 1, 335364: 1, 2506213: 1, 1392330: 1, 337753: 1, 337759: 3, 644930: 1, 958230: 1, 368708: 1, 273508: 1, 671112: 1, 648466: 1, 678223: 2, 647367: 1, 366120: 1, 363769: 2, 1389966: 1, 1389965: 2, 367601: 1, 711076: 1, 740162: 2, 735371: 1, 332827: 1, 328069: 2, 694968: 2, 647192: 1, 732877: 1, 366147: 1, 305734: 2, 306085: 2, 742383: 1, 306280: 1, 359192: 1, 730488: 1, 366137: 2, 361387: 2, 523238: 1, 152126: 1, 323492: 1, 492661: 2, 365967: 1, 365940: 3, 1112527: 1, 741247: 1, 525772: 1, 525434: 1, 679928: 1, 679590: 1, 648987: 1, 334816: 1, 356798: 1, 704314: 1, 706687: 1, 359166: 1, 356800: 2, 240189: 2, 359152: 1, 368162: 2, 304423: 1, 725348: 1, 354068: 2, 618593: 1, 733045: 1, 368303: 2, 242541: 3, 614042: 2, 301873: 2, 680264: 1, 302029: 1, 705419: 1, 706265: 1, 366301: 1, 306649: 1, 680139: 2, 644931: 1, 335365: 1, 368707: 2, 742387: 1, 304241: 1, 299325: 1, 1730122: 4, 363953: 2, 360842: 1, 358645: 1, 368515: 2, 368489: 3, 708786: 1, 711080: 1, 306635: 1, 304438: 4, 668070: 1, 647351: 1, 647310: 2, 668616: 1, 367799: 2, 337571: 1, 368667: 1, 556712: 2, 701744: 1, 330449: 3, 213642: 1, 668772: 1, 525616: 2, 366132: 2, 642253: 1, 275692: 1, 732880: 1, 365222: 1, 736516: 1, 363924: 2, 549783: 1, 178308: 1, 649324: 1, 648986: 2, 708842: 1, 361558: 1, 299326: 1, 587681: 1, 1330449: 1, 361556: 1, 275873: 2, 273300: 1, 367939: 1, 368160: 2, 306788: 1, 304422: 1, 675676: 2, 335023: 1, 728290: 1, 556740: 1, 1328080: 1, 1299493: 1, 244934: 1, 730418: 1, 335351: 2, 711165: 1, 334633: 2, 680320: 1, 306814: 3, 363936: 1, 670814: 1, 337547: 2, 706448: 2, 958568: 1, 958737: 1, 303889: 1, 304227: 2, 709235: 1, 727742: 1, 613498: 1, 361377: 1, 242570: 4, 647325: 1, 306449: 1, 711403: 1, 1081994: 1, 642551: 3, 642565: 2, 618074: 1, 678135: 1, 306776: 4, 365937: 1, 365926: 4, 337390: 1, 367940: 1, 327887: 3, 368530: 2, 368699: 2, 244936: 1, 556726: 1, 1113693: 1, 1113685: 1, 742315: 4, 366305: 1, 704483: 1, 332982: 2, 728288: 1, 301523: 1, 211446: 2, 335195: 1, 337562: 1, 332645: 2, 306647: 1, 304268: 1, 363754: 1, 358983: 1, 304086: 1, 611497: 2, 711399: 1, 729951: 3, 737802: 1, 737804: 2, 678139: 1, 1473264: 1, 739586: 1, 741950: 1, 709203: 1, 1080501: 2, 735256: 3, 363377: 3, 361180: 2, 1082726: 1, 708110: 1, 1050842: 2, 335206: 1, 674817: 1, 1346761: 1, 1468507: 1, 1112593: 2, 368531: 2, 706589: 2, 709228: 1, 737789: 2, 332998: 1, 1478022: 1, 618411: 1, 618426: 2, 337182: 1, 356265: 1, 644635: 1, 703404: 1, 668746: 1, 708344: 1, 275694: 2, 368696: 2, 366330: 2, 328251: 1, 492492: 1, 523421: 2, 368697: 1, 728052: 1, 737633: 1, 366275: 1, 366278: 1, 361545: 1, 363951: 1, 337561: 3, 304072: 2, 367797: 2, 367588: 1, 367757: 2, 244949: 1, 696995: 1, 703586: 1, 367954: 1, 365757: 3, 337728: 1, 678237: 1, 648649: 2, 359151: 3, 271116: 1, 736543: 1, 701939: 1, 677222: 1, 365966: 1, 1355549: 1, 616174: 1, 368485: 1, 337768: 2, 368655: 2, 306593: 1, 306592: 4, 304451: 2, 354406: 1, 363363: 2, 366318: 2, 368684: 1, 1106612: 1, 2506101: 2, 335374: 1, 335010: 1, 368472: 2, 304450: 1, 648635: 1, 649338: 1, 329901: 1, 330590: 1, 739783: 1, 706149: 2, 242569: 1, 731939: 1, 615498: 1, 337209: 2, 365953: 1, 865787: 1, 492297: 1, 702107: 1, 333011: 2, 368711: 1, 490113: 2, 640185: 1, 642434: 2, 734854: 1, 738361: 1, 703209: 2, 301889: 1, 742316: 2, 336675: 1, 367966: 1, 738921: 1, 330617: 2, 368161: 4, 675507: 2, 332646: 2, 737088: 3, 306269: 1, 268751: 1, 335309: 1, 706862: 2, 306818: 1, 673013: 1, 956737: 1, 670995: 1, 302068: 2, 616256: 2, 680420: 2, 306410: 1, 494858: 1, 865956: 1, 587668: 1, 673546: 1, 363741: 1, 711373: 1, 1081600: 2, 366122: 1, 275877: 1, 647010: 2, 680291: 2, 680499: 1, 614031: 2, 365419: 1, 680252: 1, 356814: 1, 328253: 2, 273312: 2, 299494: 2, 337716: 1, 737586: 1, 677915: 1, 675718: 1, 337769: 1, 739468: 1, 368123: 2, 361574: 2, 333012: 2, 732136: 2, 666394: 1, 299495: 2, 708529: 1, 299689: 1, 356811: 1, 306450: 1, 327886: 2, 336674: 1, 354251: 1, 613874: 1, 273144: 1, 367771: 2, 368524: 1, 366329: 2, 366315: 1, 335196: 3, 270765: 1, 306462: 1, 680477: 1, 273299: 2, 273314: 2, 705927: 1, 708124: 2, 366109: 1, 739572: 1, 363714: 1, 735410: 2, 368317: 1, 733007: 1, 363701: 1, 366333: 3, 356812: 1, 306099: 1, 306072: 2, 337588: 1, 368342: 1, 642436: 1, 271117: 2, 732319: 1, 989744: 1, 704134: 2, 363949: 1, 1044758: 1, 958061: 2, 337755: 2, 1447084: 1, 1485056: 1, 741078: 1, 739037: 1, 358995: 3, 363940: 1, 677769: 1, 240176: 1, 1392331: 1, 1020869: 2, 368668: 1, 301888: 1, 214008: 1, 742300: 1, 1485055: 2, 275525: 1, 740148: 2, 678291: 1, 709233: 1, 680503: 2, 361560: 1, 711390: 1, 708476: 1, 337222: 2, 213993: 2, 336830: 1, 737778: 1, 740092: 1, 710699: 1, 368320: 1, 644411: 1, 642214: 2, 551812: 1, 337196: 2, 1075755: 1, 334984: 1, 556530: 1, 270920: 1, 304424: 3, 739924: 1, 1466130: 1, 704488: 1, 704459: 2, 365968: 3, 332647: 1, 703954: 2, 363935: 1, 737572: 1, 736723: 1, 359191: 1, 735178: 1, 363757: 1, 367616: 2, 694969: 1, 897104: 1, 640055: 2, 213994: 1, 678028: 1, 1051518: 2, 337771: 1, 368136: 3, 368672: 1, 332802: 3, 180687: 1, 356629: 2, 366328: 1, 644970: 1, 703575: 1, 306437: 1, 368460: 3, 306815: 1, 1019956: 1, 648832: 2, 306748: 1, 701730: 1, 368150: 2, 242372: 1, 334829: 1, 706798: 2, 366319: 1, 701391: 1, 337365: 2, 304084: 2, 359190: 1, 363753: 2, 337364: 1, 332995: 1, 332956: 1, 365771: 1, 670816: 1, 647350: 1, 615850: 1, 332449: 1, 703768: 2, 306619: 2, 701533: 1, 701702: 2, 363896: 1, 304266: 1, 680290: 1, 304083: 1, 244556: 1, 2215265: 2, 302016: 3, 737272: 1, 706840: 3, 730460: 1, 235430: 1, 1834846: 1, 301875: 1, 306607: 2, 739896: 1, 703951: 1, 704293: 2, 242021: 1, 673296: 1, 737628: 1, 268567: 1, 730291: 1, 582753: 2, 711232: 1, 585261: 1, 334661: 1, 670972: 1, 732994: 1, 556713: 1, 328225: 1, 368498: 1, 739830: 1, 741456: 1, 727897: 2, 366121: 1, 728275: 1, 1470887: 2, 304436: 1, 741654: 1, 359177: 1, 644256: 1, 742119: 1, 741612: 2, 739600: 1, 306098: 1, 1330420: 1, 644956: 2, 368461: 2, 704068: 2, 706825: 1, 706785: 2, 707772: 1, 334464: 1, 739755: 1, 705785: 2, 273455: 1, 735206: 1, 363909: 2, 646466: 1, 299692: 1, 294918: 1, 1606358: 2, 711389: 1, 323479: 1, 367614: 2, 302070: 1, 367798: 2, 673545: 1, 368316: 1, 367980: 1, 580177: 1, 299691: 1, 297298: 2, 737711: 1, 699714: 1, 1299510: 1, 642607: 1, 365755: 1, 677183: 1, 737767: 1, 587654: 1, 647365: 1, 618595: 2, 1382824: 1, 1073333: 1, 547235: 1, 551799: 2, 739103: 1, 738374: 1, 736177: 2, 649558: 1, 270948: 2, 358969: 1, 361504: 2, 927863: 1, 732685: 1, 728121: 1, 729586: 1, 729768: 1, 740185: 1, 740016: 3, 642369: 1, 1297144: 1, 1051349: 1, 708617: 2, 368447: 2, 337220: 1, 649195: 1, 271089: 2, 732840: 1, 330265: 1, 330450: 1, 644986: 1, 730669: 2, 367783: 1, 368686: 1, 666237: 2, 337688: 1, 709245: 1, 337717: 1, 674831: 1, 1032942: 1, 587471: 1, 697349: 1, 737791: 1, 358982: 1, 332969: 1, 368290: 1, 708687: 1, 337393: 2, 213460: 1, 335336: 1, 271129: 1, 578331: 1, 672828: 2, 585456: 1, 1482782: 1, 2567983: 1, 680125: 1, 680463: 2, 1473266: 1, 708814: 1, 301874: 1, 679758: 1, 304447: 2, 211615: 1, 639665: 1, 332943: 1, 358631: 1, 577993: 2, 365924: 2, 366119: 1, 368134: 2, 614045: 1, 368682: 1, 273507: 1, 337519: 1, 332618: 2, 741976: 1, 668057: 1, 676845: 1, 649197: 1, 271131: 2, 365965: 1, 730639: 1, 702078: 1, 2224976: 1, 711243: 1, 363767: 2, 611496: 1, 615890: 2, 677041: 1, 275834: 1, 1318565: 1, 1472356: 1, 275889: 1, 649561: 1, 707798: 1, 337181: 1, 335013: 1, 273497: 2, 741977: 1, 332829: 1, 302042: 2, 273481: 2, 301887: 1, 363743: 1, 363729: 2, 273496: 1, 273468: 1, 735415: 1, 649367: 2, 1082332: 1, 306828: 1, 365600: 3, 736347: 1, 1432627: 1, 1318383: 2, 359165: 1, 737805: 1, 740131: 1, 740130: 1, 709079: 1, 337757: 2, 584767: 1, 368528: 2, 368680: 1, 328238: 1, 330604: 2, 978172: 1, 332985: 1, 703758: 1, 680473: 1, 679953: 1, 211629: 1, 209248: 2, 1112592: 1, 725910: 1, 1101964: 1, 711050: 1, 706771: 2, 704487: 1, 675926: 2, 725714: 1, 587640: 1, 330591: 2, 368698: 1, 613850: 1, 1356098: 1, 366332: 1, 306831: 2, 711248: 1, 337758: 2, 523589: 1, 677873: 1, 680486: 1, 1822945: 1, 325859: 3, 328056: 2, 741937: 2, 209235: 1, 332605: 1, 332436: 1, 698828: 1, 698998: 1, 585313: 1, 337350: 1, 368304: 1, 304421: 1, 709179: 1, 325845: 1, 587497: 1, 337754: 1, 710346: 1, 710515: 1, 738739: 2, 585315: 1, 302056: 1, 670775: 2, 708884: 1, 649014: 1, 1392289: 2, 213981: 1, 363403: 1, 585455: 1, 614030: 1, 728274: 1, 556543: 2, 1081470: 1, 1480401: 1, 737776: 2, 707786: 1, 663846: 2, 268749: 1, 152113: 2, 330252: 1, 2320398: 1, 1320763: 1, 710840: 1, 306802: 1, 677549: 2, 359008: 1, 701012: 1, 368095: 1, 356785: 1, 268554: 1, 708293: 2, 337026: 1, 709190: 1, 741782: 1, 361532: 1, 706513: 1, 354434: 1, 741275: 2, 702108: 1, 739835: 1, 1449466: 2, 675014: 1, 737269: 1, 741288: 1, 1392291: 1, 649013: 2, 738738: 1, 1051624: 1, 675872: 2, 739466: 1, 958806: 1, 701757: 2, 618567: 1, 1082199: 1, 708163: 1, 705966: 2, 2162734: 1, 368330: 1, 330603: 2, 275706: 1, 708894: 1, 708895: 2, 1349324: 1, 583089: 1, 675755: 1, 242359: 1, 706511: 1, 335153: 2, 337224: 1, 735400: 1, 735374: 2, 608751: 1, 211445: 1, 330421: 2, 835198: 1, 692393: 2, 368513: 1}





#strength = list()
pdf = list()
#cdf = list()
for x in dist.keys():
    strength.append(x)
    pdf.append(dist[x])


for i in range(0, len(pdf)):

    cumul = 0
    for j in range(0, len(pdf)):
         if strength[j] <= strength[i]:
             cumul += pdf[j]
    cdf.append( cumul)


p_win = 0
sx = hand_strength(['Kd', 'Jc', '4s', '2s', '2d'])
i=0
while i < len(strength):
    if sx >= strength[i]:
        p_win = cdf[i]
    i +=1

print(sx, p_win)
plt.plot(strength, cdf, 'r+')

#plt.show()

cumul_dist = dict()
for str in dist.keys():

    i_sample = strength.index(str)
    cumul_dist[str] = cdf[i_sample]

print(cumul_dist)

sort_orders = sorted(cumul_dist.items(), key=lambda x: x[1])
pdf_sort_orders = sorted(dist.items(), key=lambda x: x[1])

sorted_strength = list()
sorted_cdf = list()
sorted_pdf = list()
for i in sort_orders:
    sorted_strength.append(i[0])
    sorted_cdf.append(i[1])

for i in pdf_sort_orders:
    sorted_pdf.append(i[1])

print(len(sorted_cdf))

print(sorted_strength)
print(sorted_cdf)
print(sorted_pdf)